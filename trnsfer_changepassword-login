#include <stdio.h>
#include <string.h>

// Structure to hold account details
typedef struct {
    char username[30];
    char password[30];
    double balance;
} Account;

// Array to store multiple accounts
Account bankAccounts[10];
int totalAccounts = 0;

// Function declarations (because why not!)
int userLogin(char inputUsername[], char inputPassword[]);
void moneyTransfer(int senderIndex, int receiverIndex, double amount);
void updatePassword(int accountIndex);

int main() {
    // Step 1: Set up some accounts for testing purposes to see how it works
    strcpy(bankAccounts[0].username, "benedict");
    strcpy(bankAccounts[0].password, "mkuuben123");
    bankAccounts[0].balance = 5000.00;
    totalAccounts++;

    strcpy(bankAccounts[1].username, "alex");
    strcpy(bankAccounts[1].password, "alexsecure");
    bankAccounts[1].balance = 3000.00;
    totalAccounts++;

    // Step 2: Ask for login details
    printf(" Welcome to Fancy Bank System \n");
    char inputUsername[30], inputPassword[30];
    printf("Enter your username: ");
    scanf("%s", inputUsername);
    printf("Enter your password: ");
    scanf("%s", inputPassword);

    int loggedInAccount = userLogin(inputUsername, inputPassword);

    // Login validation
    if (loggedInAccount == -1) {
        printf("Oops! Login failed. Please check your username/password.\n");
        return 0; // Exit the program early
    }

    printf("\nLogin successful! Hello, %s.\n", bankAccounts[loggedInAccount].username);

    // Step 3: Show a simple menu for user actions
    int menuChoice;
    do {
        printf("\nChoose an action:\n");
        printf("1. Transfer Money\n");
        printf("2. Change Password\n");
        printf("3. Exit\n");
        printf("Your choice: ");
        scanf("%d", &menuChoice);

        switch (menuChoice) {
            case 1: {
                int receiverIndex;
                double amount;
                printf("Enter the account index to send money to (e.g., 0 or 1): ");
                scanf("%d", &receiverIndex);
                printf("Enter the amount to transfer: ");
                scanf("%lf", &amount);

                moneyTransfer(loggedInAccount, receiverIndex, amount);
                break;
            }
            case 2:
                updatePassword(loggedInAccount);
                break;
            case 3:
                printf("Thank you for banking with us! See you soon.\n");
                break;
            default:
                printf("Invalid choice. Please try again!\n");
        }
    } while (menuChoice != 3);

    return 0;
}

// Function for user login
int userLogin(char inputUsername[], char inputPassword[]) {
    for (int i = 0; i < totalAccounts; i++) {
        if (strcmp(bankAccounts[i].username, inputUsername) == 0 && strcmp(bankAccounts[i].password, inputPassword) == 0) {
            return i; // Return index if login is successful
        }
    }
    return -1; // Failed login
}

// Function for transferring money
void moneyTransfer(int senderIndex, int receiverIndex, double amount) {
    if (senderIndex < 0 || senderIndex >= totalAccounts || receiverIndex < 0 || receiverIndex >= totalAccounts) {
        printf("Invalid account index. Double-check and try again!\n");
        return;
    }
    if (bankAccounts[senderIndex].balance < amount) {
        printf("Insufficient funds. You can't send what you don't have!\n");
        return;
    }
    bankAccounts[senderIndex].balance -= amount;
    bankAccounts[receiverIndex].balance += amount;

    printf("Transfer complete! Your new balance is: %.2f\n", bankAccounts[senderIndex].balance);
}

// Function for changing password
void updatePassword(int accountIndex) {
    char newPass[30];
    printf("Enter your new password: ");
    scanf("%s", newPass);

    strcpy(bankAccounts[accountIndex].password, newPass); // Update the password
    printf("Password updated successfully! Remember it next time!\n");